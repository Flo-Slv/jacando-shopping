import { useState } from "react";
import { Link, useLocation } from "react-router-dom";
import clsx from "clsx";

import ShoppingCartIcon from "@mui/icons-material/ShoppingCart";
import AddShoppingCartIcon from "@mui/icons-material/AddShoppingCart";

import useCart from "../utils/zustand/store.js";

import Products from "./Products.jsx";
import Cart from "./Cart.jsx";
import Success from "./Success.jsx";

const Layout = () => {
  const location = useLocation();

  const currentPage = location.pathname.substring(
    1,
    location.pathname.length - 1
  );

  const [displayCart, setDisplayCart] = useState(Boolean(false));
  const [displayProducts, setDisplayProducts] = useState(currentPage);
  const [displaySuccess, setDisplaySuccess] = useState({
    display: Boolean(false),
    type: "",
    message: "",
  });

  const cart = useCart((state) => state.cart);

  const handleCloseCart = (order = Boolean(false)) => {
    setDisplayCart(Boolean(false));

    if (order)
      setDisplaySuccess({
        display: Boolean(true),
        type: "",
        message: "",
      });
  };

  const handleClickLink = (path) => setDisplayProducts(path);

  return (
    <div className="h-screen w-full bg-white relative flex overflow-hidden">
      <aside
        className={clsx(
          "h-full w-16 flex flex-col space-y-10 items-center justify-center relative",
          "bg-gray-800 text-white"
        )}
      >
        <Link to="vegetables" onClick={() => handleClickLink("vegetable")}>
          <div
            className={clsx(
              "h-10 w-10 flex items-center justify-center rounded-lg cursor-pointer",
              "hover:text-gray-800 hover:bg-white  hover:duration-300 hover:ease-linear focus:bg-white"
            )}
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              className="h-6 w-6 hover:fill-gray-800 focus:fill-gray-800"
              fill="white"
              viewBox="0 0 297 297"
              stroke="currentColor"
            >
              <path
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth="2"
                d="M282.869,48.219l13.093-26.362c2.44-4.912,0.435-10.872-4.476-13.311c-4.914-2.441-10.871-0.434-13.311,4.476 l-13.093,26.362c-9.199-4.516-20.209-2.679-27.437,4.591L200.432,81.39c-2.251,2.262-3.277,5.47-2.757,8.619 c0.52,3.15,2.521,5.857,5.38,7.277l6.652,3.304c-1.768,7.006-5.59,18.786-13.408,31.857c-2.262,3.782-4.713,7.411-7.319,10.913 c-1.717-14.388-8.69-26.798-19.872-36.497l1.764-0.882c3.717-1.858,5.883-5.835,5.43-9.965c-0.454-4.131-3.431-7.543-7.462-8.55 l-64.209-16.052V43.302c0-5.484-4.446-9.93-9.93-9.93s-9.93,4.446-9.93,9.93v28.112L20.563,87.465 c-4.031,1.008-7.008,4.419-7.462,8.55c-0.453,4.13,1.714,8.107,5.43,9.965l1.763,0.882C7.316,118.12,0,133.027,0,150.444 c0,20.674,10.203,42.032,27.991,58.598c9.504,8.851,20.396,15.63,32.067,20.146c-2.915,4.608-4.558,9.385-4.933,14.349 c-1.594,21.075,20.673,34.668,27.536,38.333c6.639,3.544,19.8,7.624,36.536,7.624c12.259,0,26.437-2.19,41.37-8.38 c22.227-9.214,42.589-25.696,60.52-48.987c19.771-25.678,36.652-59.841,50.254-101.647l0.195,0.199 c2.647,2.708,6.602,3.674,10.2,2.491c3.597-1.182,6.208-4.307,6.734-8.056l7.322-52.26C297.214,62.7,292.021,52.818,282.869,48.219z M84.771,91.884v5.214c0,5.484,4.446,9.93,9.93,9.93s9.93-4.446,9.93-9.93v-5.214l33.349,8.338l-11.854,5.927 c-3.365,1.682-5.49,5.12-5.49,8.882v19.799l-21.495-10.748c-1.397-0.699-2.919-1.048-4.44-1.048c-1.522,0-3.043,0.349-4.44,1.048 l-21.494,10.747v-19.798c0-3.762-2.125-7.199-5.49-8.882l-11.855-5.927L84.771,91.884z M19.86,150.444 c0-14.898,8.059-25.982,20.409-33.594l8.638,4.319v29.728c0,3.442,1.782,6.638,4.71,8.447s6.584,1.973,9.66,0.434l31.424-15.712 l31.425,15.712c1.401,0.701,2.922,1.048,4.44,1.048c1.815,0,3.626-0.497,5.221-1.483c2.927-1.81,4.709-5.006,4.709-8.447v-29.728 l8.638-4.319c12.35,7.612,20.409,18.697,20.409,33.594c0,5.319-1.013,10.789-2.909,16.193 c-13.303,10.834-29.074,19.525-47.259,25.945c-18.564,6.555-33.018,13.491-43.489,20.89C43.213,205.078,19.86,176.011,19.86,150.444 z M152.961,262.766c-29.512,12.236-54,5.291-60.946,1.584c-8.873-4.738-17.598-12.547-17.086-19.315 c0.286-3.784,4.814-17.397,51.057-33.724c48.994-17.298,74.845-47.393,87.904-69.593c3.997-6.795,7.07-13.275,9.431-19.109 l1.483,4.411c1.027,3.054,3.472,5.419,6.556,6.345c0.938,0.282,1.9,0.42,2.855,0.42c2.189,0,4.345-0.723,6.113-2.103l13.037-10.181 C223.18,216.15,182.293,250.606,152.961,262.766z M276.123,70.098l-4.518,32.245l-5.037-5.15c-3.537-3.618-9.226-3.997-13.212-0.884 l-14.198,11.088l-4.484-13.333c-0.84-2.496-2.637-4.557-4.995-5.728l-5.452-2.707l27.498-27.646c1.219-1.226,3.079-1.53,4.625-0.763 l17.586,8.733C275.484,66.721,276.363,68.388,276.123,70.098z"
              ></path>
            </svg>
          </div>
        </Link>

        <Link to={"fruits"} onClick={() => handleClickLink("fruit")}>
          <div
            className={clsx(
              "h-10 w-10 flex items-center justify-center rounded-lg cursor-pointer",
              "hover:text-gray-800 hover:bg-white  hover:duration-300 hover:ease-linear focus:bg-white"
            )}
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              className="h-6 w-6 hover:fill-gray-800 focus:fill-gray-800"
              fill="white"
              viewBox="0 0 512 512"
              stroke="currentColor"
            >
              <path
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth="2"
                d="M503.807,279.708c-9.99-22.07-27.854-38.578-50.299-46.481c-23.676-8.337-53.319-5.705-79.305,7.038 c-4.989,2.446-10.254,3.977-15.503,4.848c-1.538-11.984,0.849-23.12,7.151-33.229c2.017-3.237,4.228-6.032,6.339-8.363 c5.134-5.669,5.928-14.033,1.836-20.496c-5.992-9.463-19.336-10.583-26.857-2.285c-3.009,3.32-6.12,7.22-9.044,11.702 c-7.549,11.575-14.847,28.691-13.597,50.58c-3.259-0.909-5.838-1.881-7.471-2.701c-14.131-7.094-29.466-11.082-44.403-11.836 c-8.104-16.665-12.365-34.989-12.365-53.541c0-19.896-6.307-38.798-18.241-54.662c-11.527-15.326-27.934-26.834-46.201-32.405 c-0.636-0.194-1.284-0.351-1.94-0.468c-0.262-0.047-0.522-0.086-0.783-0.131c5.608-13.855,16.743-33.644,38.371-51.603 c6.984-5.799,8.677-16.084,3.297-23.396c-5.802-7.888-16.947-9.196-24.401-3.052c-13.976,11.518-24.529,23.79-32.485,35.476 C169.822,14.75,131.393-2.423,88.133,5.352C57.522,10.849,24.12,41.349,6.932,59.042C1.437,64.699-1.01,72.709,0.384,80.469 c1.394,7.762,6.478,14.42,13.596,17.81c19.287,9.186,53.321,23.147,81.982,23.146c0.548,0,1.088-0.021,1.632-0.032 c-12.318,15.519-19.35,34.562-19.35,53.551c0,28.603-10.112,56.481-28.473,78.501c-23.233,27.861-36.028,63.213-36.028,99.544 c0,85.756,69.768,155.525,155.524,155.525c31.515,0,62.193-9.598,87.965-27.277c29.754,29.55,56.703,30.331,75.766,24.205 c4.56-1.466,8.758-3.851,12.575-7.139c3.82,3.288,8.016,5.673,12.577,7.139c5.732,1.843,12.174,3.061,19.195,3.061 c23.05-0.001,52.304-13.143,82.863-60.488c21.028-32.578,36.818-71.725,46.362-98.829 C514.663,326.2,513.682,301.525,503.807,279.708z M40.711,73.226c20.64-19.499,40.106-32.188,53.402-34.577 c26.907-4.832,49.301,4.337,51.353,15.762c0.893,4.972-2.138,11.114-8.316,16.849c-8.172,7.587-20.69,13.344-34.342,15.797 C89.51,89.446,66.843,84.324,40.711,73.226z M169.263,474.682c-67.099,0.001-121.69-54.591-121.69-121.693 c0-28.427,10.008-56.085,28.18-77.877c23.422-28.088,36.321-63.661,36.321-100.167c0-15.072,7.619-30.44,20.378-41.109 c10.273-8.59,23.019-13.435,36.981-14.272c0.541,0.051,1.081,0.086,1.615,0.086c0.917,0,1.818-0.086,2.702-0.23 c0.018,0,0.036-0.001,0.055-0.001c4.281,0,8.664,0.369,13.108,1.114c23.695,7.661,39.543,29.404,39.543,54.413 c0,19.991,3.861,39.775,11.283,58.246c-0.034,0.012-0.069,0.024-0.103,0.036c-1.403,0.494-2.788,1.022-4.154,1.582 c-20.494,8.407-36.779,24.207-46.144,44.9c-9.876,21.817-10.858,46.491-2.763,69.477c9.544,27.103,25.334,66.25,46.362,98.829 c1.563,2.421,3.122,4.743,4.678,6.988C215.976,467.776,192.92,474.682,169.263,474.682z M474.658,337.95 c-25.906,73.569-67.403,147.743-106.156,135.284c-0.815-0.262-3.9-2.865-7.275-11.11c-2.603-6.356-8.788-10.507-15.656-10.507 c-6.868,0-13.052,4.152-15.654,10.508c-3.374,8.244-6.461,10.846-7.274,11.109c-16.321,5.244-33.13-4.878-49.055-23.846 c-0.371-0.589-0.768-1.166-1.22-1.719c-24.585-30.025-43.633-75.938-53.84-104.016c-0.124-0.343-0.248-0.685-0.372-1.027 c-0.209-0.579-0.416-1.153-0.618-1.715c-0.353-0.987-0.705-1.975-1.052-2.961c-5.185-14.724-4.59-30.452,1.672-44.289 c1.922-4.245,4.308-8.152,7.097-11.666c2.101-2.646,4.438-5.058,6.969-7.231c0.332-0.284,0.667-0.564,1.004-0.839 c3.256-2.657,6.819-4.925,10.655-6.736c1.617-0.763,3.281-1.448,4.988-2.049c1.045-0.368,2.122-0.696,3.22-0.996 c0.325-0.089,0.659-0.161,0.987-0.244c0.786-0.198,1.579-0.387,2.388-0.55c0.391-0.079,0.787-0.148,1.182-0.218 c0.781-0.14,1.57-0.267,2.37-0.376c0.399-0.054,0.798-0.106,1.201-0.152c0.849-0.097,1.711-0.174,2.58-0.237 c12.573-0.902,26.576,1.915,39.077,8.193c9.137,4.587,24.793,8.881,42.351,9.258c0.444,0.035,0.891,0.054,1.34,0.054 c0.204,0,0.41-0.017,0.616-0.025c13.979,0.064,29.039-2.402,42.914-9.205c17.738-8.697,38.113-10.805,53.172-5.503 c13.656,4.81,24.565,14.939,30.713,28.522C479.25,307.496,479.843,323.225,474.658,337.95z"
              ></path>
            </svg>
          </div>
        </Link>

        <Link to={"cheeses"} onClick={() => handleClickLink("cheese")}>
          <div
            className={clsx(
              "h-10 w-10 flex items-center justify-center rounded-lg cursor-pointer",
              "hover:text-gray-800 hover:bg-white  hover:duration-300 hover:ease-linear focus:bg-white"
            )}
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              className="h-6 w-6 hover:fill-gray-800 focus:fill-gray-800"
              fill="white"
              viewBox="0 0 512 512"
              stroke="currentColor"
            >
              <path
                className="st0"
                d="M434.234,242.238c-12.415,0-22.485,10.062-22.485,22.477c0,12.414,10.07,22.468,22.485,22.468 c12.414,0,22.476-10.054,22.476-22.468C456.71,252.3,446.648,242.238,434.234,242.238z"
              ></path>{" "}
              <polygon
                className="st0"
                points="343.553,438.502 343.511,438.535 343.503,438.551 "
              ></polygon>{" "}
              <path
                className="st0"
                d="M333.491,446.569l-0.075,0.042c-0.017,0.016-0.034,0.016-0.042,0.033L333.491,446.569z"
              ></path>{" "}
              <path
                className="st0"
                d="M313.159,454.57l-0.367,0.1c-0.017,0-0.042,0.026-0.058,0.026L313.159,454.57z"
              ></path>{" "}
              <path
                className="st0"
                d="M505.442,149.029l-0.008-0.026c-0.751-1.744-1.552-3.328-2.32-4.848c-0.384-0.942-0.684-1.635-0.851-2.002 h-0.008c-0.776-1.635-1.686-2.929-2.553-4.03c-7.476-12.331-17.746-23.21-30.019-32.78c-23.711-18.405-54.998-32.58-91.391-42.508 C341.876,52.933,300.269,47.393,256,47.385c-67.471,0.042-128.701,12.757-174.905,34.548 c-23.102,10.963-42.624,24.245-57.125,40.398c-7.25,8.11-13.216,17.003-17.421,26.706C2.353,158.715,0,169.203,0,180.032v142.166 c0,20.666,7.501,40.38,19.957,57.501c18.738,25.68,48.356,46.512,85.616,61.363c37.361,14.801,82.697,23.536,133.707,23.552 c7.35,0,16.536-0.592,26.665-1.635c15.201-1.627,32.204-4.272,46.755-8.276l0.092-0.034c7.2-2.035,14.066-4.346,20.499-7.984 l0.125-0.075c3.12-1.794,6.741-4.256,10.012-7.976l0.084-0.1c1.66-1.919,3.396-4.372,4.722-7.417l0.008-0.016 c1.343-3.112,2.211-6.684,2.228-10.63V353.76l107.142,3.846l1.569,0.033h0.158c13.616,0,26.732-5.28,36.568-14.767 C506.184,332.944,512,319.27,512,304.979V180.032C512,169.203,509.647,158.707,505.442,149.029z M34.399,180.032 c0.009-5.849,1.226-11.556,3.721-17.346c4.355-10.104,12.832-20.49,25.339-30.219c18.705-14.592,46.162-27.458,79.284-36.451 C175.873,86.998,214.627,81.775,256,81.784c63.041-0.033,120.049,12.198,160.204,31.236c20.082,9.494,35.875,20.666,46.196,32.246 c3.83,4.28,6.9,8.594,9.261,12.907l0.634,1.986c0.484,1.719,0.852,3.804,0.835,5.348c0.008,0.993-0.133,1.727-0.259,2.077 l-0.184,0.392c-0.058,0.042-0.066,0.225-1.134,0.676c-1.042,0.418-3.212,0.952-6.791,0.943l-0.842-0.008h0.009 c-1.878-0.042-6.675-0.2-13.4-0.45c-23.594-0.876-71.542-2.837-113.575-4.581c-21.016-0.867-40.556-1.677-54.848-2.278 c-14.283-0.601-23.286-0.984-23.31-0.984v0.017l-0.259-0.026h-0.309v-0.009l-0.225,0.009v0.008 c-4.772,0.084-9.219,2.653-11.655,6.875l-0.017-0.008l-0.067,0.15l-0.075,0.108l0.016,0.016c-1.16,2.12-1.702,4.388-1.702,6.575 c-0.008,2.619,0.751,5.24,2.236,7.517l59.403,90.864c1.293,1.969,2.486,3.988,3.579,6.04c-17.237,1.952-35.192,3.053-53.722,3.053 c-63.583,0.017-121.092-12.264-161.99-31.662c-20.457-9.653-36.693-21.092-47.53-33.222c-5.348-5.998-9.386-12.139-12.081-18.321 V180.032z M316.07,416.918c-1.026,0.559-2.478,1.26-4.28,1.952c-4.08,1.602-9.77,3.212-16.11,4.63 c-9.536,2.127-20.582,3.838-30.77,4.989c-10.187,1.152-19.623,1.735-25.63,1.735c-62.74,0.025-115.052-14.484-150.843-35.6 c-17.913-10.537-31.629-22.684-40.648-35.133c-9.035-12.498-13.382-25.054-13.391-37.294v-93.101 c4.739,5.264,10.145,10.271,16.219,14.992c21.75,16.92,51.519,30.562,86.636,40.139c35.124,9.552,75.613,14.976,118.747,14.976 c20.558,0,40.481-1.269,59.528-3.596c0.342,2.019,0.542,4.004,0.542,5.94V416.918z M477.61,304.979 c0,4.955-2.019,9.694-5.59,13.148c-3.395,3.279-7.959,5.122-12.682,5.115l-0.676-0.008l-66.244-2.378 c1.285-2.42,2.086-5.131,2.086-8.068c0-9.528-7.717-17.245-17.246-17.245c-9.528,0-17.254,7.717-17.254,17.245 c0,2.486,0.55,4.831,1.494,6.958l-20.34-0.726v-17.47c0-7.959-1.644-15.543-4.18-22.552c-1.952-5.373-4.438-10.412-7.217-15.126 c6.7-2.711,11.438-9.252,11.438-16.936c0-10.095-8.193-18.296-18.296-18.296c-4.922,0-9.386,1.978-12.665,5.148l-30.411-46.496 c18.38,0.767,46.021,1.919,74.379,3.095c3.27,0.133,6.566,0.258,9.845,0.4c-0.526,1.919-0.9,3.896-0.9,5.981 c0,12.415,10.061,22.468,22.476,22.468s22.468-10.053,22.468-22.468c0-1.434-0.159-2.836-0.426-4.204 c5.732,0.233,11.229,0.45,16.386,0.659c10.02,0.392,18.764,0.734,25.546,0.993c6.583,0.234,11.188,0.4,13.549,0.451l-0.284-0.008 l0.451,0.008h0.091h0.025l1.327,0.016c4.655,0,8.911-0.542,12.848-1.686V304.979z"
              ></path>
            </svg>
          </div>
        </Link>
      </aside>
      <div className="w-full h-full flex flex-col justify-between">
        <header className="h-16 w-full flex items-center relative justify-between px-5 space-x-10 bg-gray-800">
          <div>
            <img src="/jacando_logo.png" width={160} />
          </div>

          {cart.length ? (
            <AddShoppingCartIcon
              sx={{ color: "white" }}
              onClick={() => setDisplayCart(Boolean(true))}
              className={"cursor-pointer"}
            />
          ) : (
            <ShoppingCartIcon
              sx={{ color: "white" }}
              onClick={() => setDisplayCart(Boolean(true))}
              className={"cursor-pointer"}
            />
          )}

          <div className="flex flex-shrink-0 items-center space-x-4 text-white">
            <div className="flex flex-col items-end ">
              <div className="text-md font-medium ">Ivana Batt</div>
              <div className="text-sm font-regular">
                Talent Acquisition Manager
              </div>
            </div>

            <div>
              <img
                src="/ivana.jpeg"
                className="h-10 w-10 rounded-full object-cover"
              />
            </div>
          </div>
        </header>

        <main className="max-w-full h-full flex relative overflow-y-hidden">
          {displayProducts && displayProducts === "vegetable" && (
            <Products cat="vegetable" />
          )}

          {displayProducts && displayProducts === "fruit" && (
            <Products cat="fruit" />
          )}

          {displayProducts && displayProducts === "cheese" && (
            <Products cat="cheese" />
          )}
        </main>

        {displayCart && (
          <Cart openCart={Boolean(true)} closeCart={handleCloseCart} />
        )}

        {displaySuccess.display && (
          <Success type="order" setDisplaySuccess={setDisplaySuccess} />
        )}
      </div>
    </div>
  );
};

export default Layout;
